---
name: CI

on:
    push:
        branches:
            - main
    pull_request:

jobs:
    test:
        strategy:
            matrix:
                python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
                # Least and most supported
                taglib-version: [1.9.1, 1.10, 1.11.1, 1.12, 1.13.1, 2.0.2]

        runs-on: ubuntu-22.04

        steps:
            - uses: actions/checkout@v3
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}
            - uses: asdf-vm/actions/install@v3
            - name: Install dependencies
              run: |
                  make sync
                  sudo apt-get install -y --no-install-recommends lcov libutfcpp-dev
            - name: Run builder
              run: .venv/bin/python src/builder.py --python-version ${{ matrix.python-version }} --taglib-version ${{ matrix.taglib-version }}
            - name: Python Coveralls
              uses: coverallsapp/github-action@master
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  path-to-lcov: coverage.lcov
                  parallel: true
                  flag-name: Python-${{ matrix.python-version }}
            - name: LCOV
              run: |
                  lcov --version
                  lcov --directory build --output-file cpp.info --capture --exclude "/usr/include/*" --exclude "/opt/hostedtoolcache/*" --exclude "/home/runner/work/tagpy/tagpy/build/boost-*" --exclude "/home/runner/work/tagpy/tagpy/build/taglib-*"
                  lcov --list cpp.info
            - name: C++ Coveralls
              uses: coverallsapp/github-action@master
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  path-to-lcov: cpp.info
                  parallel: true
                  flag-name: CPP-${{ matrix.python-version }}

    integration:
        runs-on: ubuntu-20.04
        strategy:
            matrix:
                os: [fedora-35, fedora-42, ubuntu-22.04, ubuntu-24.04, alpine-3.17, alpine-3.21, manylinux_2_28]
        name: Build ${{ matrix.os }}
        steps:
            - uses: actions/checkout@v2
            - name: Set up Docker Buildx
              id: buildx
              uses: docker/setup-buildx-action@master

            - name: Cache Docker layers
              uses: actions/cache@v2
              with:
                  path: /tmp/.buildx-cache
                  key: ${{ matrix.os }}-buildx-${{ github.sha }}
                  restore-keys: |
                      ${{ matrix.os }}-buildx

            - name: Build ${{ matrix.os }}
              uses: docker/build-push-action@v2
              with:
                  context: .
                  builder: ${{ steps.buildx.outputs.name }}
                  file: .github/Dockerfile.${{ matrix.os }}
                  push: false
                  tags: ${{ steps.prep.outputs.tagged_image }}
                  cache-from: type=local,src=/tmp/.buildx-cache
                  cache-to: type=local,dest=/tmp/.buildx-cache-new

            # Temp fix
            # https://github.com/docker/build-push-action/issues/252
            # https://github.com/moby/buildkit/issues/1896
            - name: Move cache
              run: |
                  rm -rf /tmp/.buildx-cache
                  mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    manylinux:
        runs-on: ubuntu-latest
        name: Test Manylinux builds
        steps:
            - uses: actions/checkout@v2
            - run: make manylinux2014

    finish:
        needs: [test, integration, manylinux]
        runs-on: ubuntu-latest
        steps:
            - name: Coveralls Finished
              uses: coverallsapp/github-action@master
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  parallel-finished: true
